import { CodeAction, Command, ExecuteCommandParams, Connection, Range, TextDocuments, TextEdit, RequestHandler, CodeActionParams } from "vscode-languageserver/node";
import { TextDocument } from "vscode-languageserver-textdocument";
import { DisableRuleCommandIds } from "./constants";
import BufferedMessageQueue from "buffered-message-queue";
import Settings from "./settings";
export declare const DISABLE_RULES_FOR_LINE: DisableRuleCommandIds[];
export declare const DISABLE_RULES_FOR_RANGE: DisableRuleCommandIds[];
export declare const DISABLE_RULES_FOR_WHOLE_FILE: DisableRuleCommandIds[];
export declare function getIndent(line: string): string;
type RuleDisabler = (document: TextDocument, range: Range, rule: string) => TextEdit[];
export declare const DISABLE_RULE_TEXT_EDITS: Record<DisableRuleCommandIds, RuleDisabler>;
export declare function shouldApplyToLine(range: Range): boolean;
export declare function shouldApplyToWholeFile(range: Range, lineCount: number): boolean;
export declare function buildCodeActionHandler(documents: TextDocuments<TextDocument>, settings: Settings): RequestHandler<CodeActionParams, (Command | CodeAction)[], void>;
export declare function buildExecuteCommandHandler(connection: Connection, messageQueue: BufferedMessageQueue, documents: TextDocuments<TextDocument>, settings: Settings): RequestHandler<ExecuteCommandParams, unknown, void>;
export declare function registerCommandHandlers(connection: Connection, messageQueue: BufferedMessageQueue, documents: TextDocuments<TextDocument>, settings: Settings): void;
export {};
